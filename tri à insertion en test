#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX 1000
#include <time.h>


typedef struct donnee
{
    char numero[13];
    char nom[30];
    char prenom[30];
    char entsort[8];
    int booleen;
} don;

FILE* chargerfichier(FILE* fichier)
{
    fichier = NULL;
    fichier = fopen("RELEVE TEL.txt","r");
    if(fichier == NULL)
    {
        printf("erreur d'ouverture de fichier.\n");
    }
    return(fichier);
}

void regroup(FILE* fp,don tab[])
{
    fp = chargerfichier(fp);
    for (int i = 0; i<=MAX; i++)
    {
        fscanf(fp, "%s", tab[i].numero);
        fscanf(fp, "%s", tab[i].prenom);
        fscanf(fp, "%s", tab[i].nom);
        fscanf(fp, "%s", tab[i].entsort);
    }
    fclose(fp);
}


void triInsertion(don tab[MAX])
{

     int i, j;
     char* tmp = (char*) malloc(15);

     for (i=1 ; i <= MAX-1; i++)
    {
        j = i;

        while (j > 0 && tab[j-1].numero > tab[j].numero)
        {
            strcpy(tmp,tab[j].numero);
            strcpy(tab[j].numero,tab[j-1].numero);
            strcpy(tab[j-1].numero,tmp);

            j--;
        }
    }


}

int main()
{
    FILE* RELEVE;
    RELEVE = NULL;
    don numeros[MAX];

    float temps, t1bis, t2bis;
    clock_t t1, t2;

    RELEVE = chargerfichier(RELEVE);
    regroup(RELEVE, numeros);

    t1 = clock();
    t1bis = (float)t1/CLOCKS_PER_SEC;
    printf("Temps avant execution (au lancement du programme): %f\n\n\n",t1bis);
    triInsertion(numeros);

    for(int i =0; i<=MAX; i++)
    {
        printf("%s\n", numeros[i].numero);
    }

    t2 = clock();
    t2bis = (float)t2/CLOCKS_PER_SEC;
    printf("\nTemps apres execution : %f\n\n",t2bis);

    temps = (float)(t2-t1)/CLOCKS_PER_SEC;
    printf("Temps d'execution final = %f - %f = %f\n",t2bis,t1bis,temps);




    return 0;
}
